import { EditorThemeClasses } from "lexical"

import "./editor-theme.css"

export const editorTheme: EditorThemeClasses = {
  // Provide visual styling classes for immediate rendering
  ltr: "EditorTheme__ltr",
  rtl: "EditorTheme__rtl",
  heading: {
    h1: "EditorTheme__h1",
    h2: "EditorTheme__h2",
    h3: "EditorTheme__h3",
    h4: "EditorTheme__h4",
    h5: "EditorTheme__h5",
    h6: "EditorTheme__h6",
  },
  paragraph: "EditorTheme__paragraph",
  quote: "EditorTheme__quote",
  link: "EditorTheme__link",
  list: {
    checklist: "EditorTheme__checklist",
    listitem: "EditorTheme__listItem",
    listitemChecked: "EditorTheme__listItemChecked",
    listitemUnchecked: "EditorTheme__listItemUnchecked",
    nested: {
      listitem: "EditorTheme__listNested",
    },
    ol: "EditorTheme__listOl",
    olDepth: [
      "EditorTheme__listOlDepth1",
      "EditorTheme__listOlDepth2", 
      "EditorTheme__listOlDepth3",
      "EditorTheme__listOlDepth4",
      "EditorTheme__listOlDepth1"
    ],
    ul: "EditorTheme__listUl",
  },
  hashtag: "EditorTheme__hashtag",
  text: {
    bold: "EditorTheme__textBold",
    code: "EditorTheme__textCode",
    italic: "EditorTheme__textItalic",
    strikethrough: "EditorTheme__textStrikethrough",
    subscript: "EditorTheme__textSubscript",
    superscript: "EditorTheme__textSuperscript",
    underline: "EditorTheme__textUnderline",
    underlineStrikethrough: "EditorTheme__textUnderlineStrikethrough",
  },
  image: "",
  inlineImage: "",
  keyword: "",
  code: "EditorTheme__code",
  codeHighlight: {
    atrule: "EditorTheme__tokenProperty",
    attr: "EditorTheme__tokenAttr",
    boolean: "EditorTheme__tokenVariable",
    builtin: "EditorTheme__tokenFunction",
    cdata: "EditorTheme__tokenComment",
    char: "EditorTheme__tokenVariable",
    class: "EditorTheme__tokenFunction",
    "class-name": "EditorTheme__tokenFunction",
    comment: "EditorTheme__tokenComment",
    constant: "EditorTheme__tokenVariable",
    deleted: "EditorTheme__tokenProperty",
    doctype: "EditorTheme__tokenComment",
    entity: "EditorTheme__tokenOperator",
    function: "EditorTheme__tokenFunction",
    important: "EditorTheme__tokenVariable",
    inserted: "EditorTheme__tokenSelector",
    keyword: "EditorTheme__tokenAttr",
    namespace: "EditorTheme__tokenVariable",
    number: "EditorTheme__tokenProperty",
    operator: "EditorTheme__tokenOperator",
    prolog: "EditorTheme__tokenComment",
    property: "EditorTheme__tokenProperty",
    punctuation: "EditorTheme__tokenPunctuation",
    regex: "EditorTheme__tokenVariable",
    selector: "EditorTheme__tokenSelector",
    string: "EditorTheme__tokenSelector",
    symbol: "EditorTheme__tokenProperty",
    tag: "EditorTheme__tokenProperty",
    url: "EditorTheme__tokenOperator",
    variable: "EditorTheme__tokenVariable",
  },
  characterLimit: "",
  table: "EditorTheme__table",
  tableCell: "EditorTheme__tableCell",
  tableCellActionButton: "",
  tableCellActionButtonContainer: "",
  tableCellEditing: "",
  tableCellHeader: "EditorTheme__tableCellHeader",
  tableCellPrimarySelected: "",
  tableCellResizer: "",
  tableCellSelected: "",
  tableCellSortedIndicator: "",
  tableResizeRuler: "",
  tableRowStriping: "EditorTheme__tableRow",
  tableSelected: "",
  tableSelection: "",
  layoutItem: "",
  layoutContainer: "",
  autocomplete: "",
  blockCursor: "",
  embedBlock: {
    base: "",
    focus: "",
  },
  hr: "",
  indent: "",
  mark: "",
  markOverlap: "",
}
